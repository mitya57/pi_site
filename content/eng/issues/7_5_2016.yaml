---
title: Issue N5 2016 year 
content:
 - doi: 7.195-201
   link: 7.195-201
   udk: "004.41"
   item_authors: "Kovalevskiy A. A., Pustygin A. N."
   item_name: "Source Code Indivisible Parts Symptoms Extraction Based on Universal Intermediate and Further Equivalent Representations"
   item_authors_address: | 
     <b> A. A. Kovalevskiy</b>, morskoyzmey@gmail.com, <b> A. N. Pustygin</b>, p2008an@ya.ru, Chelyabinsk State University, Chelyabinsk, 454001, Russian Federation
   item_corr_author: "Kovalevskiy Aleksey A., Postgraduate Student, Chelyabinsk State University, Chelyabinsk, 454001, Russian Federation, e-mail: morskoyzmey@gmail.com"
   item_rec_on:  December 24, 2015  
   item_acc_on:  February 15, 2016
   item_annot: |
     <p> In this article a source code symptoms extraction method is proposed, based on source code transformation to universal intermediate and then to an equivalent representation. The goal of the transformation is the subsequent classification of text parts in accordance with the developed types system. The analysis of open source projects is based on symptoms of the parts without binding to identifier names. For four open source projects there are statistical results to a groups symptoms clustering accordingly with a having functionally in pairs similar appointment submitted. The aim of this study was as an implementation of the source code selection given set of functional attributes parts as well as demonstration of the using possibilities of the proposed approach to the source text analysis. The test system types (glossary) was created according to heuristic reasons to described quantum algorithmic meaning.
     </p>
   item_keywords: universal intermediate representation, equivalent representation, statical analysis, open source software, source code classification, source code indivisible symptoms
   item_pages: 195–201
   item_citation: ' Kovalevskiy A. A., Pustygin A. N. Source Code Indivisible Parts Symptoms Extraction Based on Universal Intermediate and Further Equivalent Representations, Programmnaya Ingeneria, 2016, vol. 7, no. 5, pp. 195—201.'
 - doi: 7.202-210
   link: 7.202-210
   udk: "519.683.2"
   item_authors: "Chushkin M. S."
   item_name: "System for Deductive Verification of Predicate Programs"
   item_authors_address: | 
     <b> M. S. Chushkin</b>, chushkinm@rambler.ru, A. P. Ershov, Institute of Informatics Systems, Novosibirsk, 630090, Russian Federation 
   item_corr_author: " Chushkin Michail S., Postgraduate Student, A. P. Ershov, Institute of Informatics Systems, Novosibirsk, 630090, Russian Federation, e-mail: chushkinm@rambler.ru"
   item_rec_on:  February 18, 2016  
   item_acc_on:  March 03, 2016
   item_annot: |
     <p> The programming language P defines a class of programs which do not interact with the external environment. Infinite execution of such programs is meaningless, so the execution of a correct P program must terminate. Loops and pointers are prohibited in the P language.
     In present article the method of deductive verification for predicate programs is developed. The formula of total correctness for a predicate program with respect to its specification using the formal operation semantics is presented. The rules of decomposition the total correctness formula into simple and short formulas are developed. The correctness of rules is proved in PVS.
     A tool for deductive verification that generates formulas of program correctness is implemented. The correctness formulas are generated by using the system of rules. The correctness formulas are then translated to the SMT-solver CVC3 and the specification language of PVS-system.
     The type compatibility errors can lead to an unpredictable behavior of a program. The translator of P language performs full type checking. Some checks couldnt be discharged statically. They are translated to the PVS specification language for use to prove it in the PVS.
     All correctness formulas are first tested in the SMT-solver CVC3. Unsolved formulas are then translated to the set of theories in the PVS specification language.
     </p>
   item_keywords: predicate programming, total correctness of a program, deductive verification, proof assist system PVS, SMT-solver CVC3
   item_pages: 202–210
   item_comment: 'This work was supported by the Russian Foundation for Basic Research, project № 16-01-00498 '
   item_citation: ' Chushkin M. S. System for Deductive Verification of Predicate Programs, Programmnaya Ingeneria, 2016, vol. 7, no. 5, pp. 202—210.'
 - doi: 7.211-214
   link: 7.211-214
   udk: "004.5"
   item_authors: "Turovsky Ya. A., Kurgalin S. D., Alekseev A. V., Vahtin A. A.  "
   item_name: "The Additional Feedback Channel Creation for Brain—Computer Interfaces"
   item_authors_address: | 
     <b> Ya. A. Turovsky</b>, e-mail: yaroslav_turovsk@mail.ru, <b> S. D. Kurgalin</b>, e-mail: kurgalin@bk.ru, <b> A. V. Alekseev</b>, e-mail: a_v_alekseev@bk.ru, <b> A. A. Vahtin</b>, e-mail: alvahtin@gmail.com, Voronezh State University, 395006, Voronezh, Russian Federation
   item_corr_author: "Turovsky Yaroslav A., Associate Professor, Voronezh State University, 395006, Voronezh, Russia e-mail: yaroslav_turovsk@mail.ru"
   item_rec_on:  January 20, 2016 
   item_acc_on:  January 26, 2016 
   item_annot: |
     <p> The purpose of this work is to suggest an implement a means to increase the effectiveness of neurocomputer interface functioning by forming an additional brain—computer feedback channel for the immediate control of the work of this interface. In the classical control scheme, which uses the brain-computer interface, between the beginning of conscious generation of commands by user and the receiving of those commands from the neurocomputer interface by the managed device, the user does not now whichever command is considered by the combined system as the most probable for evaluating. Neither is it known whichever of them are selected for transmission to the effector device, and what the relationships between their probabilities are, etc. As a result, the commands selected for evaluation will be visible only when the interface or the effector program have already evaluated them. In this article are considered the benefits of using an additional feedback channel for the brain—computer interfaces. Thus it is demonstrated that the existing combined software-hardware systems impose significant restrictions on the control of the brain-computer interface by the user. A new combined solution is demonstrated, that is suitable for both synchronous and asynchronous brain-computer interfaces. Such programs form a new feedback channel, that informs a human about the command creations in the software part of the brain-computer interface. This approach allows one to change the functioning of various brain structures more efficiently, than with a classical brain-computer interface scheme.
     </p>
   item_keywords: human—computer interfaces, brain—computer interfaces, feedback, soft-hard complex
   item_pages: 211–214
   item_citation: ' Turovsky Ya. A., Kurgalin S. D., Alekseev A. V., Vahtin A. A. The Additional Feedback Channel Creation for Brain—Computer Interfaces, Programmnaya Ingeneria, 2016, vol. 7, no. 5, pp. 211—214.'
 - doi: 7.215-220
   link: 7.215-220
   udk: "629.73.02; 629.73.05/.06; 535.643"
   item_authors: "Zharinov I. O., Zharinov O. O. "
   item_name: "An Automatization of Designing of Color Palette of On-Board Indication Equipment Unit by Processing of Energy Characteristics of Colors with Maximal Perceptual Differences"
   item_authors_address: | 
     <b> I. O. Zharinov</b>, igor_rabota@pisem.net, Saint Petersburg National Research University of Information Technologies, Mechanics and Optics (ITMO University), Saint Petersburg, 197101, Russian Federation, Design Bureau Electroavtomatika, Saint Petersburg, 198095, Russian Federation, <b> O. O. Zharinov</b>, zharinov73@hotbox.ru, Saint-Petersburg State University of Aerospace Instrumentation, Saint Petersburg, 190000, Russian Federation
   item_corr_author: " Zharinov Igor O., Chief of Department, Saint Petersburg National Research University of Information Technologies, Mechanics and Optics (ITMO University), 197101, Saint Petersburg, Russian Federation e-mail: igor_rabota@pisem.net"
   item_rec_on:  February 20, 2016
   item_acc_on:  February 29, 2016
   item_annot: |
     <p> The practical problem of finding colors to be used for on-board indication equipment color palette, having best characteristics of perception for an observer, is considered. The block diagram of the developed algorithm, which provides automatization of search procedure within automated workstation, is proposed. Main part of the algorithm is triple program loop, which implements the method of complete enumeration, trying different combinations of code values of basic colors (red, green, blue), which are formed by workstation computer. The criterion for any given color to be included into color palette set, is its maximal contrast. It was shown that searching procedure to find colors with best perceptual properties doesnt need to enumerate all possible RGB codes combinations lying within colour gamut triangle, but only particular set codes, relating to areas of colors with maximal perception differences. Reduction of the searching area leads to decrease of duration of automated search procedure. Borders of each given area, corresponding to color with maximal perceptual differences from other ones, were approximated by quadrangles. Vertices of quadrangles are defined by numerical values of chromaticity coordinates on XY- and UV-color planes. Principle of calculation of chromaticity coordinates of vertices of polygons, which contain colors with maximal perceptive differences and may be displayed on the indication equipment, is proposed. Calculation of chromaticity coordinates of vertices of polygons may be performed immediately within the whole searching algorithm, with the use of obtained results of the task of calculation of coordinates of the point of intersection of two straight lines in the Cartesian coordinate system coordinates. Obtained results are presented at the XY- and UV-chromaticity planes as areas, corresponding to the sets of colors, having maximal perceptual differences, which can be displayed on the screen of on-board indication equipment.
     </p>
   item_keywords: colour gamut, image contrast, maximum, color, perceptual differences, avionics
   item_pages: 215–220
   item_citation: ' Zharinov I. O., Zharinov O. O. An Automatization of Designing of Color Palette of On-Board Indication Equipment Unit by Processing of Energy Characteristics of Colors with Maximal Perceptual Differences, Programmnaya Ingeneria, 2016, vol. 7, no. 5, pp. 215—220'
 - doi: 7.221-230
   link: 7.221-230
   udk: "004.75 + 004.41"
   item_authors: "Shundeev A. S."
   item_name: "The Programming's Basics for Numerical Methods"
   item_authors_address: | 
     <b> A. S. Shundeev</b>, Institute of Mechanics, Lomonosov Moscow State University, 119991, Moscow, Russian Federation 
   item_corr_author:  'Shundeev Aleksandr S., Leading Researcher, Institute of Mechanics, Lomonosov Moscow State University, 119991, Moscow, Russian Federation, e-mail: alex.shundeev@gmail.com'
   item_rec_on:  February 19, 2016
   item_acc_on:  March 02, 2016
   item_annot: |
     <p> This article describes an approach to teaching the programming basics for the software implementation of numerical methods. This approach was used by the author during the practical sessions in the training course "Working on a computer and programming" for the first-year Faculty of Mechanics and Mathematics students of Lomonosov Moscow State University.
     In this approach, the student receives the necessary theoretical knowledge and develops practical skills in three interrelated areas. The first area is the theoretical foundations of computer arithmetics. The second area is the implementation of machine arithmetics in the target computer system. As an example of the architecture, SSE has been considered. This technology is implemented in modern Intel processors. The third area is the instrumental programming tools. The examples in the third area are based on the standard library of the C programming language, YASM assembler, GCC compiler and GDB debugger.
     </p>
   item_keywords: floating-point arithmetic, IEEE754, numerical methods, the standard C programming language library, YASM assembler, SSE
   item_pages: 221–230
   item_citation: "Shundeev A. S. The Programming's Basics for Numerical Methods, Programmnaya Ingeneria, 2016, vol. 7, no. 5, pp. 221—230"
 - doi: 7.231-237
   link: 7.231-237
   udk: "004.932.4"
   item_authors: "Sverdlov S. Z."
   item_name: "Algorithm and Program to Downsizing the Digital Images"
   item_authors_address: | 
     <b> S. Z. Sverdlov</b>, c3c@uni-vologda.ac.ru, Vologda State University, Vologda, 160600, Russian Federation 
   item_corr_author: " Sverdlov Sergey Z., Professor, Vologda State University, Vologda, 160600, Russian Federation, e-mail: c3c@uni-vologda.ac.ru"
   item_rec_on:  February 05, 2016
   item_acc_on:  March 02, 2016
   item_annot: |
     <p> The scaling algorithm, which provides high-quality digital images downsizing, and C3C Image Size program, that implements it, are described. They are developed based on the following principles:
     1. Images are transformed in a linear color space. Otherwise, the calculation of the pixels color would violate fundamental laws of physics and colorimetry, in particular, H. Grassmanns law of additivity: the color coordinates of the sum of radiations are equal to the sum of the components coordinates. Its especially relevant for the images size reduction, because the color of pixels of the resulting (downsized) image is formed as a mixture of color of source pixels.
     2. Intermediate calculations are performed in real numbers rather than integers, that ensures the absence of rounding errors. As RGB component values are reduced during the linearization of original gamma-corrected image, using integer representation would lead to substantial loss of accuracy, thats why its especially important to avoid rounding errors.
     3. Scaling is performed using an algorithm, which has a natural physical interpretation.
     4. Controlled sharpness gain and contrast leveling are applied after scaling.
     Tests show proper transmission of tones without darkened or lightened areas on the picture, correct color rendition, high quality of the reduced image. The algorithm allows effective implementation, that provides high operating speed of the program. C3C Image Size program has spread among photographers and is available for free use.
     </p>
   item_keywords: Image processing, digital photo, resize, raster graphics, software, plug-in, colorimetr
   item_pages: 231–237
   item_citation: ' Sverdlov S. Z. Algorithm and Program to Downsizing the Digital Images, Programmnaya Ingeneria, 2016, vol. 7, no. 5, pp. 231—237. '
---
